题目: 支持缓存与内存带宽动态划分的多核实时调度算法设计与实现

1. 实时操作系统

2. 缓存干扰

3. gEDFca

4. 内存流量划分

5. 接下来要做的事

我的题目是”支持缓存与内存带宽动态划分的多核实时调度算法设计与实现“。因为是多核，所以有可能会出现缓存干扰的情况，主要问题就是不同核访
问的内存映射到了缓存的同一位置，就造成了缓存一直在换进换出，不仅使程序的运行速度变慢，还导致其运行时间很难预测。于是就用动态缓存划分
来解决这个问题，我们使用gEDFca调度算法来实现缓存划分，gEDFca算法的大致流程就是遍历就绪队列，取出优先级最高也就是有最近截止日期的任
务；若处理器和缓存资源都足够则调度任务并更新就绪和处理器队列；若不满足上述条件，则查找较低优先级处理器抢占其处理器和缓存分区资源，若
通过抢占获得足够资源则继续进行调度并更新相应队列；若最后仍不满足资源调度条件则此次任务调度失败。在硬件层面，通过ARM架构的LbM方法将
需要锁定、解锁以及刷新的缓存分区映射到具体硬件控制寄存器，以实现对缓存分区的硬件资源管理。这样就实现了可抢占的动态缓存划分，然后在此
基础上，还要对内存带宽进行划分，我的想法是优先级越高的任务分配更多的内存带宽，或者说占用缓存资源更多的任务分配更多的内存带宽，这样做
的缺点是每次调度后都要重新分配内存带宽，这个我还在想有没有更好的方案。
我这个毕设是继承自学姐的，当前的进展时学姐的论文已经看完了，并且我也看完了csapp这本书，积累了很多基础知识。接下来的任务就是看完静态
缓存划分的论文和内存带宽划分的论文，并且我想看看学姐的代码，并在学姐的代码基础上加入内存带宽划分的模块，并且更新算法，比如将红黑树换
成优先队列或者线段树。(还有静态划分的代码，以及gEDFca的论文)
